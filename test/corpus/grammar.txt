=================
simple rule
=================

^s: a .

---

(source_file
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (nonterminal))
    (fullstop)))

=================
simple rule with comments
=================

^s: { comment } a  {also a comment } .

---

(source_file
  (rule
    (mark)
    (rulename)
    (rulesep)
    (comment)
    (alt
      (nonterminal))
    (comment)
    (fullstop)))

=================
rule without a mark
=================

s: a .

---

(source_file
  (rule
    (rulename)
    (rulesep)
    (alt
      (nonterminal))
    (fullstop)))


=================
grammar with a prolog
=================

ixml version "1.0" .
s: a .

---

(source_file
  (prolog
    (version
      (string))
    (fullstop))
  (rule
    (rulename)
    (rulesep)
    (alt
      (nonterminal))
    (fullstop)))

=================
two rules
=================

s: a .
a: b .

---

(source_file
  (rule
    (rulename)
      (rulesep)
      (alt
        (nonterminal))
      (fullstop))
  (rule
    (rulename)
      (rulesep)
      (alt
        (nonterminal))
      (fullstop)))

=================
a rule with a string literal
=================

s: "a".

---

(source_file
  (rule
    (rulename)
    (rulesep)
    (alt
      (literal
        (quoted
          (string))))
    (fullstop)))

=================
rules with escaped string literal
=================

s: "a""b".
t: 'c''d'.

---

(source_file
  (rule
    (rulename)
    (rulesep)
    (alt
      (literal
        (quoted
          (string))))
    (fullstop))
  (rule
    (rulename)
    (rulesep)
    (alt
      (literal
        (quoted
          (string))))
    (fullstop)))

=================
a member that’s a character
=================

-S: -["."] .

---

(source_file
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (charset
        (tmark)
        (set
          (osq)
          (member
            (character))
          (csq)))) 
    (fullstop)))

=================
a member that’s a string
=================

-S: -["ab"] .

---

(source_file
  (rule
    (mark)
     (rulename)
     (rulesep)
     (alt
       (charset
         (tmark)
         (set
           (osq)
           (member
             (string))
           (csq))))
     (fullstop)))

=================
a member that’s a string range
=================

-S: -["a" - "b"] .

---

(source_file
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (charset
        (tmark)
        (set
          (osq)
          (member
            (range
              (from
                (character))
              (hyphen)
              (to
                (character))))
          (csq))))
    (fullstop)))

=================
empty comment
=================

S: {} a .

---

(source_file
  (rule
    (rulename)
    (rulesep)
    (comment)
    (alt
      (nonterminal))
    (fullstop)))

=================
comment with spaces
=================

S: {  } a .

---

(source_file
  (rule
    (rulename)
    (rulesep)
    (comment)
    (alt
      (nonterminal))
    (fullstop)))

=================
non-empty comment
=================

S: { abc } a .

---

(source_file
  (rule
    (rulename)
    (rulesep)
    (comment)
    (alt
      (nonterminal))
    (fullstop)))

=================
nested comment
=================

S: { {abc} } a .

---

(source_file
  (rule
  (rulename)
    (rulesep)
    (comment
      (comment))
    (alt
      (nonterminal))
    (fullstop)))

=================
nested comment at start
=================

S: {{abc} } a .

---

(source_file
  (rule
    (rulename)
    (rulesep)
    (comment
      (comment))
    (alt
      (nonterminal))
    (fullstop)))

=================
nested comment at end
=================

S: { {abc}} a .

---

(source_file
  (rule
    (rulename)
    (rulesep)
    (comment
      (comment))
    (alt
      (nonterminal))
    (fullstop)))

=================
deeply nested comment
=================

S: {{a{b{c}}}} a .

---

(source_file
  (rule
    (rulename)
    (rulesep)
    (comment
      (comment
        (comment
          (comment))))
    (alt
      (nonterminal))
    (fullstop)))

=================
curly brace in a string
=================

S: "{" .

---

(source_file
  (rule
  (rulename)
    (rulesep)
    (alt
      (literal
        (quoted
          (string))))
    (fullstop)))

=================
a rule named “ixml”
=================

ixml: a .

---

(source_file
  (rule
    (rulename)
      (rulesep)
      (alt
        (nonterminal))
      (fullstop)))

=================
a “real” example
=================

ixml: S, rules.
-rules: rule; rule, rules.
rule: mark, name, S, -"::=", S, def;
      name, S, -"::=", S, def.
def: alts .
-alts: alt; alt, -"|", S, alts .
alt: terms; empty .
-terms: term; term, terms .
empty: .
term: mark, name, S; name, S; string, S; range .
@name: -"<", letters, -">" .
@mark: "@", S; "^", S; "-", S .
letters: letter, more-letters .
letter: ["a"-"z"]; ["A"-"Z"]; ["0"-"9"] .
more-letters: letter, more-letters; "-", more-letters; .
@string: -"""", chars, -"""" .
chars: char, chars; char .
char: [" "-"!"]; ["#"-"~"]; -'"', '"'. {all characters, quotes must be doubled}
range: -"[", S,  from, S, -"-", S, to, S, -"]", S .
@from: character .
@to: character .
-character: -"""", char, -""""; -"""", """", -"""", -"""" .
-S: -[" "; #a; #d], S; comment, S; .
comment: "{", schars, "}" .
-schars: schar, schars; .
-schar: [" "-"|"]; "~" . {Everything except: }

---

(source_file
  (rule
    (rulename)
    (rulesep)
    (alt
      (nonterminal)
      (termsep)
      (nonterminal))
    (fullstop))
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (nonterminal))
    (altsep)
    (alt
      (nonterminal)
      (termsep)
      (nonterminal))
    (fullstop))
  (rule
    (rulename)
    (rulesep)
    (alt
      (nonterminal)
      (termsep)
      (nonterminal)
      (termsep)
      (nonterminal)
      (termsep)
      (literal
        (quoted
          (tmark)
          (string)))
      (termsep)
      (nonterminal)
      (termsep)
      (nonterminal))
    (altsep)
    (alt
      (nonterminal)
      (termsep)
      (nonterminal)
      (termsep)
      (literal
        (quoted
          (tmark)
          (string)))
      (termsep)
      (nonterminal)
      (termsep)
      (nonterminal))
    (fullstop))
  (rule
    (rulename)
    (rulesep)
    (alt
      (nonterminal))
    (fullstop))
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (nonterminal))
    (altsep)
    (alt
      (nonterminal)
      (termsep)
      (literal
        (quoted
          (tmark)
          (string)))
      (termsep)
      (nonterminal)
      (termsep)
      (nonterminal))
    (fullstop))
  (rule
    (rulename)
    (rulesep)
    (alt
      (nonterminal))
    (altsep)
    (alt
      (nonterminal))
    (fullstop))
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (nonterminal))
    (altsep)
    (alt
      (nonterminal)
      (termsep)
      (nonterminal))
    (fullstop))
  (rule
    (rulename)
    (rulesep)
    (fullstop))
  (rule
    (rulename)
    (rulesep)
    (alt
      (nonterminal)
      (termsep)
      (nonterminal)
      (termsep)
      (nonterminal))
    (altsep)
    (alt
      (nonterminal)
      (termsep)
      (nonterminal))
    (altsep)
    (alt
      (nonterminal)
      (termsep)
      (nonterminal))
    (altsep)
    (alt
      (nonterminal))
    (fullstop))
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (literal
        (quoted
          (tmark)
          (string)))
      (termsep)
      (nonterminal)
      (termsep)
      (literal
        (quoted
          (tmark)
          (string))))
    (fullstop))
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (literal
        (quoted
          (string)))
      (termsep)
      (nonterminal))
    (altsep)
    (alt
      (literal
        (quoted
          (string)))
      (termsep)
      (nonterminal))
    (altsep)
    (alt
      (literal
        (quoted
          (string)))
      (termsep)
      (nonterminal))
    (fullstop))
  (rule
    (rulename)
    (rulesep)
    (alt
      (nonterminal)
      (termsep)
      (nonterminal))
    (fullstop))
  (rule
    (rulename)
    (rulesep)
    (alt
      (charset
        (set
          (osq)
          (member
            (range
              (from
                (character))
              (hyphen)
              (to
                (character))))
          (csq))))
    (altsep)
    (alt
      (charset
        (set
          (osq)
          (member
            (range
              (from
                (character))
              (hyphen)
              (to
                (character))))
          (csq))))
    (altsep)
    (alt
      (charset
        (set
          (osq)
          (member
            (range
              (from
                (character))
              (hyphen)
              (to
                (character))))
          (csq))))
    (fullstop))
  (rule
    (rulename)
    (rulesep)
    (alt
      (nonterminal)
      (termsep)
      (nonterminal))
    (altsep)
    (alt
      (literal
        (quoted
          (string)))
      (termsep)
      (nonterminal))
    (altsep)
    (fullstop))
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (literal
        (quoted
          (tmark)
          (string)))
      (termsep)
      (nonterminal)
      (termsep)
      (literal
        (quoted
          (tmark)
          (string))))
    (fullstop))
  (rule
    (rulename)
    (rulesep)
    (alt
      (nonterminal)
      (termsep)
      (nonterminal))
    (altsep)
    (alt
      (nonterminal))
    (fullstop))
  (rule
    (rulename)
    (rulesep)
    (alt
      (charset
        (set
          (osq)
          (member
            (range
              (from
                (character))
              (hyphen)
              (to
                (character))))
          (csq))))
    (altsep)
    (alt
      (charset
        (set
          (osq)
          (member
            (range
              (from
                (character))
              (hyphen)
              (to
                (character))))
          (csq))))
    (altsep)
    (alt
      (literal
        (quoted
          (tmark)
          (string)))
      (termsep)
      (literal
        (quoted
          (string))))
    (fullstop))
  (comment)
  (rule
    (rulename)
    (rulesep)
    (alt
      (literal
        (quoted
          (tmark)
          (string)))
      (termsep)
      (nonterminal)
      (termsep)
      (nonterminal)
      (termsep)
      (nonterminal)
      (termsep)
      (literal
        (quoted
          (tmark)
          (string)))
      (termsep)
      (nonterminal)
      (termsep)
      (nonterminal)
      (termsep)
      (nonterminal)
      (termsep)
      (literal
        (quoted
          (tmark)
          (string)))
      (termsep)
      (nonterminal))
    (fullstop))
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (nonterminal))
    (fullstop))
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (nonterminal))
    (fullstop))
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (literal
        (quoted
          (tmark)
          (string)))
      (termsep)
      (nonterminal)
      (termsep)
      (literal
        (quoted
          (tmark)
          (string))))
    (altsep)
    (alt
      (literal
        (quoted
          (tmark)
          (string)))
      (termsep)
      (literal
        (quoted
          (string)))
      (termsep)
      (literal
        (quoted
          (tmark)
          (string)))
      (termsep)
      (literal
        (quoted
          (tmark)
          (string))))
    (fullstop))
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (charset
        (tmark)
        (set
          (osq)
          (member
            (character))
          (altsep)
          (member
            (character
              (hex)))
          (altsep)
          (member
            (character
              (hex)))
          (csq)))
      (termsep)
      (nonterminal))
    (altsep)
    (alt
      (nonterminal)
      (termsep)
      (nonterminal))
    (altsep)
    (fullstop))
  (rule
    (rulename)
    (rulesep)
    (alt
      (literal
        (quoted
          (string)))
      (termsep)
      (nonterminal)
      (termsep)
      (literal
        (quoted
          (string))))
    (fullstop))
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (nonterminal)
      (termsep)
      (nonterminal))
    (altsep)
    (fullstop))
  (rule
    (mark)
    (rulename)
    (rulesep)
    (alt
      (charset
        (set
          (osq)
          (member
            (range
              (from
                (character))
              (hyphen)
              (to
                (character))))
          (csq))))
    (altsep)
    (alt
      (literal
        (quoted
          (string))))
    (fullstop))
  (comment))

=================
simple rule no space before full stop
=================

^s: a.

---

(source_file
  (rule
    (mark)
    (rulename)
    (rulesep)
      (alt
        (nonterminal))
    (fullstop)))

